---
{{- range $ordererId := until (.Values.ordererReplica|int)}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $.Values.ordererName }}{{ $ordererId }}-{{ $.Values.ordererNamespace }}
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hyperledger
        role: orderer
        org: {{ $.Values.ordererNamespace }}
        orderer-id: {{ $.Values.ordererName }}{{ $ordererId }}
    spec:
      containers:
      - name: {{ $.Values.ordererName }}{{ $ordererId }}
        image: hyperledger/fabric-orderer:1.4.4
        env:
        - name: FABRIC_LOGGING_SPEC
          value: "debug"
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: "0.0.0.0"
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/orderer.genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /var/hyperledger/orderer/msp
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt]'
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt]'		  
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus		  
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
        ports:
         - containerPort: 7050
         - containerPort: 8443		 
        command: ["orderer"]
        volumeMounts:
         - mountPath: /var/hyperledger/orderer/msp
           name: orderer
           subPath: crypto-config/ordererOrganizations/example-com/orderers/orderer{{ $ordererId }}-example-com/msp
         - mountPath: /var/hyperledger/orderer/tls
           name: orderer
           subPath: crypto-config/ordererOrganizations/example-com/orderers/orderer{{ $ordererId }}-example-com/tls
         - mountPath: /var/hyperledger/orderer/orderer.genesis.block
           name: orderer
           subPath: channel-artifacts/genesis.block
         - mountPath: /var/hyperledger/production/orderer
           name: orderer
           subPath: data/orderer{{ $ordererId }}-{{ $.Values.ordererNamespace }}
         - mountPath: /etc/hosts
           name: hosts		   
      volumes:
        - name: orderer
          persistentVolumeClaim:
            claimName: orderer-pvc		
        - name: hosts
          hostPath:
            path: /etc/hosts			
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.ordererName }}{{ $ordererId }}-{{ $.Values.ordererNamespace }}
spec:
 type: NodePort 
 selector:
   app: hyperledger
   role: orderer
   org: {{ $.Values.ordererNamespace }}
   orderer-id: {{ $.Values.ordererName }}{{ $ordererId }}
 ports:
   - name: listen-endpoint
     protocol: TCP
     port: 7050
     targetPort: 7050	 
   - name: operations-listen
     protocol: TCP
     port: 8443
     targetPort: 8443
---
{{- end }}
